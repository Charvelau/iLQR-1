For now, I am skipping the vectorization/parallelization of the forward pass so that
we can get this up and running quickly.
Eigen doesn't support 3D matrices...

Figure out where to put past inputs.

Stuff to do (in approximate order)

-------------
TODO
>>>>>>> b889efe... slightly organized code
- step 2~4 in iLQR_core
	- check for termination due to small gradient

Check inputs/outputs individually:
- compute_derivatives
- forward_pass
- backward_pass

- correct tire dynamic model according to cyrus' commit on matlab repo
- iLQR::init_traj (check pending)
- iLQR::forward_pass - almost done, need control_limits to be implemented
- iLQR::backward_pass -
- step 2 in iLQR_core
- step 3 in iLQR_core

- integrate cost for change in control input

- write final control sequence and states to text file
- test whole thing and see if output looks reasonable - plot in matlab

-------------
FASTER
1. calculate_derivatives
	- store auxiliary variables
	- change incrementing method?

2. backward_pass

3. forward_pass
	- vectorize for parallel line search?

- see links in notes
-----------
Later on:
- fix all the messy stuff
	- sort out public/private in classes
	- extract methods into smaller methods, especially in fw, bw, boxQP


- make it more readable
	- see google cpp style guide
	- refactor to completely separate iLQR class from Model class
		- make sure everything in iLQR is dimension-agnostic
		- there are currently some hacks
	- make it reusable
		- make skeleton for new Model class, for reference

- add documentation
- helper functions are all inline right now to prevent duplicate symbol error - move these to cpp file
